version: '3.8'

services:
  # Redis for development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  # Backend in development mode
  backend-dev:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - FLASK_DEBUG=True
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    depends_on:
      - redis
    command: python app.py

  # Celery worker in development mode
  celery-worker-dev:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    depends_on:
      - redis
    command: celery -A analysis_tasks worker --loglevel=debug --concurrency=1

  # Frontend in development mode (optional - you can also run with npm run dev)
  frontend-dev:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend-dev

volumes:
  redis_dev_data:
    driver: local
