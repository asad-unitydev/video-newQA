version: '3.8'

services:
  # Redis for Celery broker and job status
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API server
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=production
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for video analysis
  celery-worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A analysis_tasks worker --loglevel=info --concurrency=2
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "analysis_tasks", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend web server
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: video-qa-network
